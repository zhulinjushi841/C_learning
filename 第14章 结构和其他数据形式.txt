14.10 联合简介
联合(uinion)是一种数据类型，它能够在同一个内存空间中存储不同的数据类型(不是同时存储)。其典型用法是，设计
一种表以存储既无规律、实现也不要知道顺序的混合类型。
使用联合和创建结构的方式相同， 需要一个联合模板和联合变量。
14.10.1 使用联合


14.11 枚举类型
可以用枚举类型(enumerated type)声明符号名称来表示整型变量。使用enum关键字，可以创建一个新“类型”并指定
它具有的值(实际上，enum常量是int类型，因此，只要能使用int类型的地方就可以使用枚举类型)。
枚举类型的目的是提高程序的可读性，它的语法与结构的语法相同。
14.11.1 enum常量



14.12 typedef简介
typedef工具是一个高级数据特性，利用typedef可以为某一类型自定义名称。
这方面与#define类似，但是存在一些不同：
1.与#define不同，typedef创建的符号名只限于类型，不能用于值。
2.typedef由编译器解释，不是预处理器。
3.在其受限范围内，typedef比#define更加灵活。
typedef定义的作用域取决于typedef定义所在的位置。如果定义在函数中，就具有局部作用域，受限于定义所在的函数。
如果定义在外面，就具有文件作用域。
使用typedef的第一个原因是：为经常出现的类型创建一个方便、已识别的类型名。
第二个原因是typedef常用于给复杂的类型命名。
使用typedef时需记住，typedef并没有创建任何新类型，它只是为某个已存在的类型增加了一个方便使用的
标签。